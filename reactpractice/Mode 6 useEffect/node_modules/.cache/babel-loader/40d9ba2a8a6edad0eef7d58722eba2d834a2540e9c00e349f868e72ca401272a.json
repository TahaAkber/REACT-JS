{"ast":null,"code":"var _jsxFileName = \"/Users/kolnice/Documents/GitHub/REACT-JS/reactpractice/Crud in react Mod 5/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Task from \"./Components/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todolist, settodolist] = useState([]);\n  const [value, setvalue] = useState(\"\");\n  const handlechange = event => {\n    setvalue(event.target.value);\n  };\n  const handleadd = () => {\n    const task = {\n      //if todolist has element 1 or more then take array from array take last member and id then + 1 to id\n      id: todolist.length === 0 ? 1 : todolist[todolist.length - 1].id + 1,\n      taskname: value\n    };\n    settodolist([...todolist, task]);\n  };\n  const deletetask = id => {\n    const newarray = todolist.filter(i => {\n      if (i.id === id) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    settodolist(newarray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Addtask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlechange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleadd,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaytask\",\n      children: todolist.map(i => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          taskname: i.taskname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MTg4I7EdDotTVNRKUKnASlrwg2c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Task","jsxDEV","_jsxDEV","App","_s","todolist","settodolist","value","setvalue","handlechange","event","target","handleadd","task","id","length","taskname","deletetask","newarray","filter","i","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["/Users/kolnice/Documents/GitHub/REACT-JS/reactpractice/Crud in react Mod 5/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Task from \"./Components/Task\";\n\nfunction App() {\n  const [todolist, settodolist] = useState([]);\n  const [value, setvalue] = useState(\"\");\n\n  const handlechange = (event) => {\n    setvalue(event.target.value);\n  };\n\n  const handleadd = () => {\n    const task = {\n      //if todolist has element 1 or more then take array from array take last member and id then + 1 to id\n      id: todolist.length === 0 ? 1 : todolist[todolist.length - 1].id + 1,\n      taskname: value,\n    };\n    settodolist([...todolist, task]);\n  };\n\n  const deletetask = (id) => {\n    const newarray = todolist.filter((i) => {\n      if (i.id === id) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    settodolist(newarray);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"Addtask\">\n        <input onChange={handlechange} />\n        <button onClick={handleadd}>Add Task</button>\n      </div>\n      <div className=\"displaytask\">\n        {todolist.map((i) => {\n          return <Task taskname={i.taskname} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,YAAY,GAAIC,KAAK,IAAK;IAC9BF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,IAAI,GAAG;MACX;MACAC,EAAE,EAAET,QAAQ,CAACU,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGV,QAAQ,CAACA,QAAQ,CAACU,MAAM,GAAG,CAAC,CAAC,CAACD,EAAE,GAAG,CAAC;MACpEE,QAAQ,EAAET;IACZ,CAAC;IACDD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEQ,IAAI,CAAC,CAAC;EAClC,CAAC;EAED,MAAMI,UAAU,GAAIH,EAAE,IAAK;IACzB,MAAMI,QAAQ,GAAGb,QAAQ,CAACc,MAAM,CAAEC,CAAC,IAAK;MACtC,IAAIA,CAAC,CAACN,EAAE,KAAKA,EAAE,EAAE;QACf,OAAO,KAAK;MACd,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IACF,CAAC,CAAC;IACFR,WAAW,CAACY,QAAQ,CAAC;EACvB,CAAC;EACD,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAKmB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBpB,OAAA;QAAOqB,QAAQ,EAAEd;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjCzB,OAAA;QAAQ0B,OAAO,EAAEhB,SAAU;QAAAU,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACNzB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBjB,QAAQ,CAACwB,GAAG,CAAET,CAAC,IAAK;QACnB,oBAAOlB,OAAA,CAACF,IAAI;UAACgB,QAAQ,EAAEI,CAAC,CAACJ;QAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CAxCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}