{"ast":null,"code":"var _jsxFileName = \"/Users/kolnice/Documents/GitHub/REACT-JS/reactpractice/Mode 6 useEffect/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Task from \"./components/Task\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showtext, setshowtext] = useState(false);\n\n  //if want trigger one when component mounted then use empty array or use state in an array\n  useEffect(() => {\n    console.log(\"Component Mounted\");\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setshowtext(!showtext);\n      },\n      children: \"showtext\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), showtext && /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a07ZLJpMTST+nEmdTKaZRYO5Hls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Task","jsxDEV","_jsxDEV","App","_s","showtext","setshowtext","console","log","text","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kolnice/Documents/GitHub/REACT-JS/reactpractice/Mode 6 useEffect/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Task from \"./components/Task\";\nimport \"./App.css\";\n\nfunction App() {\n  const [showtext, setshowtext] = useState(false);\n\n  //if want trigger one when component mounted then use empty array or use state in an array\n  useEffect(() => {\n    console.log(\"Component Mounted\");\n  }, [text]);\n  return (\n    <div className=\"App\">\n      <button\n        onClick={() => {\n          setshowtext(!showtext);\n        }}\n      >\n        showtext\n      </button>\n      {showtext && <Task />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAD,SAAS,CAAC,MAAM;IACdS,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EACV,oBACEP,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA;MACEU,OAAO,EAAEA,CAAA,KAAM;QACbN,WAAW,CAAC,CAACD,QAAQ,CAAC;MACxB,CAAE;MAAAM,QAAA,EACH;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRX,QAAQ,iBAAIH,OAAA,CAACF,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACZ,EAAA,CAnBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}